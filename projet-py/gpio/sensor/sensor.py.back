#! /usr/bin/python
# -*- coding: utf-8 -*-

"""
    Classe pour contrôler les télémètres via les valeurs des pins GPIO.
    
    Devant :
        TRIG = GPIO 13 => Mode OUT      Phys. 33    wPi 23  BCM 13
        ECHO = GPIO 05 => Mode IN       Phys. 29    wPi 21  BCM 5
        
    Derrière :
        TRIG = GPIO 19 => Mode OUT      Phys. 35    wPi 24  BCM 19
        ECHO = GPIO 06 => Mode IN       Phys. 31    wPi 22  BCM 6
"""

import RPi.GPIO as GPIO                    #Import GPIO library
import time                                #Import time library
GPIO.setmode(GPIO.BCM)                     #Set GPIO pin numbering 

# Devant
SENSOR_FRONT_TRIG = 13 #=BCM, wPi=23
SENSOR_FRONT_ECHO = 5 #=BCM, wPi=21

# Derrière
SENSOR_BACK_TRIG = 19 #=BCM, wPi=24
SENSOR_BACK_ECHO = 6 #=BCM, wPi=22

GPIO.setup(TRIG,GPIO.OUT)                  #Set pin as GPIO out
GPIO.setup(ECHO,GPIO.IN)                   #Set pin as GPIO in

while True:

  GPIO.output(TRIG, False)                 #Set TRIG as LOW
  print "Waitng For Sensor To Settle"
  time.sleep(2)                            #Delay of 2 seconds

  GPIO.output(TRIG, True)                  #Set TRIG as HIGH
  time.sleep(0.00001)                      #Delay of 0.00001 seconds
  GPIO.output(TRIG, False)                 #Set TRIG as LOW

  while GPIO.input(ECHO)==0:               #Check whether the ECHO is LOW
    pulse_start = time.time()              #Saves the last known time of LOW pulse

  while GPIO.input(ECHO)==1:               #Check whether the ECHO is HIGH
    pulse_end = time.time()                #Saves the last known time of HIGH pulse 

  pulse_duration = pulse_end - pulse_start #Get pulse duration to a variable

  distance = pulse_duration * 17150        #Multiply pulse duration by 17150 to get distance
  distance = round(distance, 2)            #Round to two decimal points

  if distance > 2 and distance < 400:      #Check whether the distance is within range
    print "Distance:",distance - 0.5,"cm"  #Print distance with 0.5 cm calibration
  else:
    print "Out Of Range"                   #display out of range
